--1.)What if the GetAllMoves jump DFS can branch off in two different directions?
undoLastMove 1000
doMove C7 -> D6
doMove F2 -> E3
doMove C3 -> D2
doMove E3 -> D4
doMove C5 -> E3
doMove F6 -> E5
doMove B6 -> C5
doMove E5 -> C7
doMove B8 -> D6
doMove G5 -> F6
doMove E3 -> G5
doMove H6 -> F4
doMove D6 -> E5
doMove F6 -> D4 -> B6
doMove A7 -> C5
doMove F8 -> E7
doMove A5 -> B6
doMove G7 -> F6
doMove B2 -> C3
doMove H4 -> G5
doMove D2 -> E3
doMove F4 -> D2
doMove C3 -> E1
doMove E7 -> D8
doMove E1 -> F2
doMove G1 -> E3
doMove A1 -> B2
doMove E3 -> D2
doMove C1 -> E3
doMove D8 -> C7
doMove B6 -> D8
doMove F6 -> E5
doMove E3 -> F2
doMove G3 -> E1
doMove B2 -> C1
doMove G5 -> F6
doMove D8 -> E7
doMove F6 -> D8
doMove A3 -> B2
doMove H2 -> G3
doMove C1 -> D2
showBoard
doMove e1         -> c3   -> a1
undoLastMove 1
showBoard
doMove e1   ->c3             -> a1

showBoard
undoLastMove 1
doMove e1   ->c3             -> a1           
showBoard
undoLastMove 1000


-- Various old tests from CheckersTests.minimax
enterMove C3  ->   D4
applyMove
doMove f4->e5
doMove c7->d8
doMove e5->c3
doMove b4->d2
doMove f2->e1
doMove b2->c3
doMove f6->e5
doMove a1->b2
doMove g3->f4
doMove c3->d4
showBoard

setOptions
n

setOptions
y
500
400
20

setOptions
n

-- More old tests from CheckersTests.minimax
doMove c7->d8
doMove F2 -> E1       
doMove C5 -> D6       
doMove F8 -> E7       
doMove D6 -> F8
doMove G3 -> F2       
doMove B8 -> C7       
doMove H4 -> G3       
doMove C1 -> D2       
doMove F4 -> E5
doMove D8 -> E7       
doMove F6 -> D8       
doMove B4 -> C5       
doMove G5 -> F6       
doMove A7 -> B8
doMove E5 -> D6
doMove C5 -> E7 -> G5 
doMove H6 -> F4       
doMove F8 -> H6       
doMove F2 -> E3
doMove C3 -> D4       
-- Right here, my GetALlMoves() used to not display
showBoard 
doMove E3 -> C1       
doMove H6 -> G5       
doMove F4 -> E3     
doMove D4 -> F2 -> H4
showBoard
undoLastMove 25
testPlay 10 25
showMoveHist
showBoard
-- My GetAllMoves() used to not return this move as valid.
doMove h8->g7
doMove a3->b4
showBoard
doMove c1->a3
showBoard
undoLastMove 1
showBoard
undoLastMove 1000
showBoard


-- 2.) Invalid string input checks
-- Out of bounds strings
enterMove a1->b0
enterMove b8->c9
enterMove h2->i1

-- Decimals for numbers
enterMove a1.1->b4
enterMove a1->b2.2

-- Extra 0's
enterMove a000000000000->b4
enterMove a3->b0000000000

-- Trailing garbage
enterMove a3->b4 garbage
enterMove a3->b4garbage
enterMove a3->b4                          /0

-- Spaces inside arrows
enterMove a3- >b4

-- 3.) Check a move where you jump into a backrow and then attempt to jump backwards as a king.
undoLastMove 1000
testPlay 10 25
showMoveHist
doMove h8->g7
doMove a3->b4
showBoard
doMove c1->a3
showBoard
undoLastMove 1000

-- 4.) compareMove test:  What if you have two moves that have different lengths, but are otherwise equal to each other?
enterMove a1->b2->c3
compareMove a1->b2->c3->d4

enterMove a1->b2->c3->d4
compareMove a1->b2->c3

-- Test for compareMove: 100% test coverage.
enterMove a3->b4->c5
compareMove a3->b3->c5
compareMove a3->b4->c5
compareMove a3->b5->c5
compareMove a3->b4->c5->c5
compareMove a3->b4
compareMove a3->b3->c5->
compareMove a3->b3->c5- >
compareMove a3->b3->c5->->

-- Test for :  Ensure that changing the options immediately changes the board values.
undoLastMove 1000
testPlay 34 20
showBoard
showVal
setOptions
n
showVal
setOptions
y
50
40
20
showVal
testPlay 23 20
showVal
undoLastMove 30
showVal
setOptions
y
20
40
50
showVal
setOptions
n

-- Test for :  Saving the board should load up those options.
undoLastMove 1000
testPlay 58 29
showVal
saveBoard test0
showVal
setOptions
y
100
90
80
showVal
testPlay 5 10
showVal
setOptions
y
40
30
40
showVal
loadBoard test0
showVal
setOptions
y
40
30
40
showVal

-- Test showMoveHist:  Loading the board should load a new moveHist.
undoLastMove 1000
showMoveHist
testPlay 34 1
showMoveHist
testPlay 23 10
showMoveHist
saveBoard test1
showMoveHist
undoLastMove 1000
showMoveHist
testPlay 50 20
showMoveHist
loadBoard test1
showMoveHist
showBoard

-- Ensure that upper case and lower case string input are both valid.
enterMove a1->B2
enterMove A1->b2
enterMove a1->b2

-- Verify that tabs in strings aren't invalid strings.
enterMove a1      -> b2
enterMove A1->B2                 ->c3

-- END GAME tests

-- END GAME test: Check a large 9 jump move.  Arrange a 9 Kings vs. 1 King endgame, and have the 1 King win in a single jump.
undoLastMove 1000
doMove C1 -> D2       
doMove F2 -> E1       
doMove C5 -> D4       
doMove F8 -> E7       
doMove B6 -> C5      
doMove G7 -> F8       
doMove A5 -> B6       
doMove H8 -> G7       
doMove B2 -> C1       
doMove F6 -> E5    
showBoard  
doMove D4 -> F6 -> H8 
showBoard
doMove G5 -> F6       
doMove C7 -> D6       
doMove H6 -> G7       
doMove B8 -> C7      
doMove E7 -> D8       
doMove A7 -> B8       
doMove F8 -> E7       
showBoard
doMove D6 -> F8 -> H6 
showBoard
doMove G1 -> F2      
doMove A1 -> B2       
doMove H2 -> G1       
doMove C5 -> D4       
doMove F4 -> E3  
showBoard     
doMove D2 -> F4 -> H2
showBoard
doMove F2 -> E3       
doMove D4 -> F2       
doMove G1 -> E3       
doMove H8 -> G7       
doMove E3 -> D2      
doMove C1 -> E3       
doMove E1 -> D2       
doMove C3 -> E1       
doMove F6 -> E7       
doMove B6 -> C5      
doMove D8 -> B6       
doMove G7 -> F8       
doMove E7 -> D8       
doMove H2 -> G1       
doMove D8 -> C7      
doMove B8 -> D6       
doMove B6 -> A7       
doMove E3 -> F4       
doMove H4 -> G3       
doMove F4 -> H2      
doMove A7 -> B8       
doMove E1 -> F2       
doMove B8 -> A7       
doMove F2 -> G3       
doMove A7 -> B8      
doMove G3 -> H4       
doMove B8 -> A7       
doMove B2 -> C1       
doMove A7 -> B8       
doMove C1 -> D2      
doMove B8 -> A7       
doMove G1 -> F2       
doMove A7 -> B8       
doMove D2 -> E1       
doMove B8 -> A7      
doMove F2 -> E3       
doMove A7 -> B8       
doMove A3 -> B2       
doMove B8 -> A7       
doMove H2 -> G3      
doMove A7 -> B8       
doMove H4 -> G5       
doMove B8 -> A7       
doMove B2 -> C1       
doMove A7 -> B8      
doMove C1 -> D2       
doMove B8 -> A7       
doMove E3 -> D4       
doMove A7 -> B8       
doMove D6 -> E5      
doMove B8 -> A7       
doMove D4 -> E3       
doMove A7 -> B8       
doMove E1 -> F2       
doMove B8 -> A7      
doMove F2 -> G1       
doMove A7 -> B8       
doMove G1 -> H2       
doMove B8 -> A7       
doMove D2 -> E1      
doMove A7 -> B8       
doMove E1 -> F2       
doMove B8 -> A7       
doMove G3 -> F4       
doMove A7 -> B8      
doMove H2 -> G3       
doMove B8 -> A7       
doMove F2 -> G1       
doMove A7 -> B8       
doMove G1 -> H2      
doMove B8 -> A7       
doMove E5 -> F6       
doMove A7 -> B8       
doMove F6 -> G7       
doMove B8 -> A7      
doMove G7 -> H8       
doMove A7 -> B8       
doMove F8 -> E7       
doMove B8 -> A7       
doMove E7 -> D8      
doMove A7 -> B8       
doMove C5 -> D4       
doMove B8 -> A7       
doMove D8 -> C7       
doMove A7 -> B8      
doMove D4 -> E5       
doMove B8 -> D6       
doMove E5 -> F6       
doMove D6 -> C7       
doMove B4 -> C3      
doMove C7 -> B8       
doMove C3 -> D2       
doMove B8 -> A7       
doMove F4 -> E5       
doMove A7 -> B8      
doMove G3 -> F4       
doMove B8 -> A7       
doMove D2 -> E1       
doMove A7 -> B8       
doMove E1 -> F2      
doMove B8 -> A7       
doMove H6 -> G7       
doMove A7 -> B8       
doMove G7 -> F8       
doMove B8 -> A7      
doMove F2 -> G3       
doMove A7 -> B8       
doMove F6 -> G7       
doMove B8 -> A7       
doMove G7 -> H6      
doMove A7 -> B8       
doMove G3 -> H4       
doMove B8 -> A7       
doMove E3 -> D2       
doMove A7 -> B8      
doMove D2 -> C3       
doMove B8 -> A7       
doMove F4 -> E3       
doMove A7 -> B8       
doMove H2 -> G3      
doMove B8 -> A7       
doMove E5 -> D4       
doMove A7 -> B8       
doMove D4 -> C5       
doMove B8 -> A7      
doMove G5 -> F4       
doMove A7 -> B8       
doMove F4 -> E5       
doMove B8 -> A7       
doMove H4 -> G5      
doMove A7 -> B8       
doMove G5 -> F6       
doMove B8 -> A7       
doMove H6 -> G5       
doMove A7 -> B8      
doMove F6 -> E7       
doMove B8 -> A7       
doMove H8 -> G7       
doMove A7 -> B8       
doMove E7 -> D6      
doMove B8 -> A7       
doMove F8 -> E7       
doMove A7 -> B8    
-- Right here is where you can arrange for the "one fell swoop"
showBoard
showVal
keyMoveCount
doMove d6->c7
showBoard
showVal
keyMoveCount
-- Attempt to do each one of those moves, showing values each time.
doMove B8 -> D6 -> B4 -> D2 -> F4 -> D6 -> F8 -> H6 -> F4 -> H2
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> B4 -> D2 -> F4 -> H2                        
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> B4 -> D2 -> F4 -> H6 -> F8 -> D6 -> F4 -> H2
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> F4 -> D2 -> B4 -> D6 -> F8 -> H6 -> F4 -> H2
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> F4 -> H2                                    
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> F4 -> H6 -> F8 -> D6 -> B4 -> D2 -> F4 -> H2
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> F8 -> H6 -> F4 -> D2 -> B4 -> D6 -> F4 -> H2
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> F8 -> H6 -> F4 -> D6 -> B4 -> D2 -> F4 -> H2
showBoard
showVal
keyMoveCount
undoLastMove 1
doMove B8 -> D6 -> F8 -> H6 -> F4 -> H2 
showBoard
showVal
keyMoveCount
undoLastMove 1

--.) More string sanity checks
-- String sanity check: Valid strings even with extra whitespace
enterMove    a3    ->        b4
showMove
enterMove	 	a3 	 	-> 	 	b4 	 	
showMove
enterMove a3->b4
showMove
enterMove   a 3 ->b4
showMove
enterMove  a3-> b 4
showMove

-- String sanity check: Invalid strings due to whitespace
enterMove a3- >b4
enterMove a3 - > b4

-- Extra characters in the string / trailing garbage
enterMove  a3->    b4     d
enterMove aa2->b4
enterMove a3a -> b4
enterMove a3->bb4
enterMove a3->b4b

-- Only input one location
enterMove a3
enterMove a3  ->
enterMove a3->b
enterMove a->b4
enterMove a->3b4
enterMove  ->   b4




"setOptions is a gold mine for bugs"


Tests for compareKeys



quit


